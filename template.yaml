AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Resources:
  Function:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-Function
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: Function
      CodeUri: gttps://github.com/arki7n/stackery-ws.git
      Handler: src/index.handler
      Runtime: nodejs12.x
      MemorySize: 256
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
  Websocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Description: !Sub
        - ${ResourceName} From Stack ${StackTagName} Environment ${EnvironmentTagName}
        - ResourceName: Websocket
      Name: !Sub
        - ${StackTagName}-${EnvironmentTagName}-${ResourceName}
        - ResourceName: Websocket
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.action
  WebsocketStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref Websocket
      StageName: !Ref EnvironmentAPIGatewayStageName
      DeploymentId: !Ref WebsocketDeployment
  WebsocketDeployment:
    Type: AWS::ApiGatewayV2::Deployment
    Properties:
      ApiId: !Ref Websocket
    DependsOn:
      - WebsocketRoutetest
      - WebsocketRoutetestResponse
      - WebsocketRoutetestIntegrationResponse
  WebsocketRoutetest:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref Websocket
      RouteKey: test
      Target: !Sub integrations/${WebsocketRoutetestIntegration}
  WebsocketRoutetestResponse:
    Type: AWS::ApiGatewayV2::RouteResponse
    Properties:
      ApiId: !Ref Websocket
      RouteId: !Ref WebsocketRoutetest
      RouteResponseKey: $default
  WebsocketRoutetestIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref Websocket
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Function.Arn}/invocations
  WebsocketRoutetestIntegrationPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt Function.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${Websocket}/*/test
  WebsocketRoutetestIntegrationResponse:
    Type: AWS::ApiGatewayV2::IntegrationResponse
    Properties:
      ApiId: !Ref Websocket
      IntegrationId: !Ref WebsocketRoutetestIntegration
      IntegrationResponseKey: $default
Parameters:
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  EnvironmentAPIGatewayStageName:
    Type: String
    Description: Environment name used for API Gateway Stage names (injected by Stackery at deployment time)